/*
 * Sicutdeux's Corne/crkbd keymap using ZMK
 * Based off of miryoku
 * 
 *
/*https://github.com/Sicutdeux1/DeuxZmk





#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definitions
#define DEFAULT 0
#define NAVI 1
#define MEDIA 2
#define NUM 3
#define FUNC 4
#define SYM 5
#define NONE 0

// TODO
// Change right index LSFT on numbers layer to shift to alternative shift layer, 
// with everything shifted except the left thumb keys being ( )
// (waiting on ZMK extended keycode support)

/ {
//  Homerow mod held behaviour 
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <120>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

// HELD on each layer shows which key(s) are being held to access that layer
// #'s signify the split

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ---------------------------------------------------------------------------------------------------------
// |  F1 |   '    |   ,    |       .      |    P    |  Y   | # |  F  |      G      |      C      |    R    |   L    |  F4   |
// |  F2 | A/LGUI | O/LALT |    E/LCTL    |  U/LSFT |  I   | # |  D  |    H/LSFT   |   T/LCTRL   | N/LALT | S/LGUI | ENTER |
// |  F3 |   ;    |   Q    |       J      |    K    |  X   | # |  B  |      M      |      W      |    V   |   Z    |  F5   |
//                         |       ESC    |NAV/BCKSP|TAB/MD| # | ENT | LT NUM/SPC  | LT FUNC/DEL |

            bindings = <
&trans  &kp QOUT     &kp CMMA    &kp DOT     &kp P       &kp Y      &kp F   &kp G       &kp C         &kp R        &kp L        &trans
&trans  &hm LGUI A   &hm LALT O  &hm LCTL E  &hm LSFT U  &kp I      &kp D   &hm LSFT H  &hm LCTL T    &hm LALT N   &hm LGUI S   &trans
&trans  &kp  SEMI    &kp Q       &kp J       &kp K       &kp X      &kp B   &kp M       &kp W         &kp V        &kp Z        &trans
                        &lt SYM ESC   &lt MEDIA BSPC   &lt NUM TAB      &lt FUNC RET &lt NAVI SPC &kp DEL
            >;
        };

        navigation {
// ---------------------------------------------------------------------------------------
// |     | BT1  |  BT2 |  BT3  |  BT4  |  BT5 | # | CUT  | COPY | PASTE | REDO |  UNDO |     |
// |     | LGUI | LALT | LCTL  | LSFT  |BT_CLR| # | CPSL | LFT  |  UP   | DOWN |  RGT  |     |
// |     |      | RALT |       |       |      | # |      | HOME | PGUP  | PGDW |  END  |     |
//                     |  ESC  | BCKSP |  TAB | # | ENT  | HELD |  DEL  |

            bindings = <
&trans   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &kp CUT   &kp COPY  &kp PSTE  &kp UNDO  &kp REDO   &trans   
&trans   &kp LGUI      &kp LALT     &kp LCTL     &kp LSFT     &bt BT_CLR         &kp LCAPS &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT  &trans
&trans   &trans        &trans       &trans       &trans       &trans             &trans    &kp HOME  &kp PG_UP &kp PG_DN &kp END    &trans
                                   &kp ESC    &kp BSPC        &kp TAB            &kp RET   &trans  &kp DEL
            >;  
        };

        media_keys {
// -------------------------------------------------------------------------------------
// |     |      |      |      |      |      | # |      | PREV  | VOLD  | VOLU | NEXT |     |
// |     |1/LGUI|2/LALT|3/LCT |4/LSFT|   5  | # |   6  |7/LFST |8/LCTRL|9/LALT|0/LGUI|     |
// |     |      | RALT |      |      |      | # |      |  STOP |  PLAY | MUTE |      |     |
//                     | HELD |      | LSFT | # | STOP | PLAY  | MUTE  |

            bindings = <
&trans   &trans     &trans      &trans      &trans      &trans      &trans      &cp M_PREV  &cp M_VOLD  &cp M_VOLU &cp M_NEXT  &trans    
&trans   &hm LGUI 1 &hm LALT 2  &hm LCTL 3  &hm LSFT 4  &kp 5       &kp 6       &hm LSFT 7  &hm LCTL 8  &hm LALT 9 &hm LGUI 0  &trans
&trans   &trans     &trans      &trans      &trans      &trans      &trans      &M_STOP     &M_PLAY     &M_MUTE    &trans      &trans
                                &trans     &trans     &kp LSFT      &cp M_STOP &cp M_PLAY &cp M_MUTE
            >;
        };

        numbers {
// ---------------------------------------------------------------------------------
// |     |  %  |  7  |  8  |  9  |   =  | # |     |      |      |      |      |     |
// |     |  *  |  4  |  5  |  6  |   -  | # |     |  SFT | CTRL | LALT | LGUI |     |
// |     |  0  |  1  |  2  |  3  |   /  | # |     |      |      | RALT |      |     | 
//                   |  .  |     |  -_  | # | ENT | SPC  |  DEL |

            bindings = <
&trans    &kp PRCNT &kp NUM_7    &kp NUM_8    &kp NUM_9    &kp EQUAL     &trans    &trans   &trans    &trans    &trans    &trans    
&trans    &kp STAR  &kp NUM_4    &kp NUM_5    &kp NUM_6    &kp MINUS     &trans    &kp LSFT  &kp LCTL &kp LALT  &kp LGUI  &trans
&trans    &kp NUM_0 &kp NUM_1    &kp NUM_2    &kp NUM_3    &kp FSLH      &trans    &trans   &kp RALT  &trans    &trans    &trans    
                                 &kp DOT      &trans       &kp MINUS     &kp RET   &SPC   &DEL
            >;
        };

        function_keys {
// -------------------------------------------------------------------------------------
// |     |  F12 |  F7  |  F8  |  F9  | PTSRN | # |     |     |      |      |      |     |
// |     |  F11 |  F4  |  F5  |  F6  | SCRLL | # |     | SFT | CTRL | LALT | LGUI |     |
// |     |  F10 |  F1  |  F2  |  F3  | PAUSE | # |     |     |      | RALT |      |     |
//                     |   ESC|  SPC |  TAB  | # |     |     | HELD |



            bindings = <
&trans    &kp F12    &kp F7    &kp F8    &kp F9    &kp PRSC      &trans    &trans   &trans    &trans    &trans    &trans    
&trans    &kp F11    &kp F4    &kp F5    &kp F6    &trans        &trans    &kp LSFT &kp LCTL  &kp LALT  &kp LGUI  &trans
&trans    &kp F10    &kp F1    &kp F2    &kp F3    &trans        &trans    &trans   &kp RALT  &trans    &trans    &trans    
                               &kp ESC   &kp BSPC  &kp TAB      &trans   &trans   &trans
            >;
        };

         symbol_keys {
// -------------------------------------------------------------------------------------
// |     |   [  |   ]  |  (  |  )  |     | # |    |  ?  |  /   |  \   |     |     |
// |     |   !  |   @  |  #  |  $  |     | # |    | %   |   ^  |  &   |  *  |     |
// |     |      |      |     |     |     | # |    |     |      |      |     |     |
//                     |   ESC|BSPC| TAB | # |    |     | HELD |



            bindings = <
&trans    &kp LBKT  &kp RBKT  &kp LPAR   &kp RPAR   &trans      &trans    &kp QMARK  &kp FSLH  &kp BSLH  &trans   &trans    
&trans    &kp EXCL  &kp AT    &kp POUND  &kp DOLLAR &trans      &trans    &kp PRCNT  &kp CARET &kp AMPS  &kp star    &trans
&trans    &trans    &trans    &trans     &trans     &trans      &trans    &trans   &trans  &trans    &trans      &trans    
                              &kp ESC    &kp BSPC  &kp TAB      &kp RET   &kp SPC   &kp DEL
            >;
        };  
 };
};
